#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Nov 03, 2018 04:20:12 PM +0200  platform: Windows NT

import Creat_Right_Tri
import Creat_Isos_Tri
import subprocess
import sys
from Right_Triangle import *
from Isosceles_tri import *
from Square import *
from Equilateral_Triangle import *
from Rectangle import *
from Parallelogram import *
from Circle import *
from Ellipse import *
from Main_GUI import *
import Shape_Func

path_to_tool = sys.argv[0].split("/")
path_to_tool.pop()
temp = ""
for word in path_to_tool:
    temp += word + "/"
path_to_tool = temp[:-1]
path_to_tool += "/" + "data.txt"
DATABASE = path_to_tool

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def click(root, data, canvas, shape):
    Shape_Func.create_Shape_Change(root, data, canvas, shape)
    sys.stdout.flush()

def creat_circle(root, data, canvas):
    print('Main_GUI_support.creat_circle')
    sys.stdout.flush()


def creat_ellipse(root, data, canvas):
    print('Main_GUI_support.creat_ellipse')
    sys.stdout.flush()


def creat_equilateral_triangle(root, data, canvas):
    print('Main_GUI_support.creat_equilateral_triangle')
    sys.stdout.flush()


def creat_isos_tri(root, data, canvas):
    Creat_Isos_Tri.create_Creat_Isosceles_Triangle(root, data, canvas)
    with open(DATABASE, "r") as file:
        print file.readline()
    print('Main_GUI_support.creat_isos_tri')
    sys.stdout.flush()


def creat_parallelogram(root, data, canvas):
    print('Main_GUI_support.creat_parallelogram')
    sys.stdout.flush()


def creat_rectangle(root, data, canvas):
    print('Main_GUI_support.creat_rectangle')
    sys.stdout.flush()


def creat_right_tri(root, data, canvas):
    Creat_Right_Tri.create_Creat_Right_Teiangle(root, data, canvas)
    with open(DATABASE, "r") as file:
        print file.readline()
    print('Main_GUI_support.creat_right_tri')
    sys.stdout.flush()

def creat_square(root, data, canvas):
    print('Main_GUI_support.creat_square')
    sys.stdout.flush()

def creat_poligon(p1,p2,p3):
    print('Main_GUI_support.creat_poligon')
    print('p1 = {0}'.format(p1))
    print('p2 = {0}'.format(p2))
    print('p3 = {0}'.format(p3))
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import Main_GUI
    Main_GUI.vp_start_gui()


