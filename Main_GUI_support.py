#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Nov 01, 2018 06:18:29 PM +0200  platform: Windows NT

import Creat_Right_Tri
import subprocess
import sys
from Right_Triangle import *
from Isosceles_tri import *
from Square import *
from Equilateral_Triangle import *
from Rectangle import *
from Parallelogram import *
from Circle import *
from Ellipse import *
from Main_GUI import *

path_to_tool = sys.argv[0].split("/")
path_to_tool.pop()
temp = ""
for word in path_to_tool:
    temp += word + "/"
path_to_tool = temp[:-1]
path_to_tool += "/" + "data.txt"
DATABASE = path_to_tool

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def creat_circle(root):
    print('Main_GUI_support.creat_circle')
    sys.stdout.flush()


def creat_ellipse(root):
    print('Main_GUI_support.creat_ellipse')
    sys.stdout.flush()


def creat_equilateral_triangle(root):
    print('Main_GUI_support.creat_equilateral_triangle')
    sys.stdout.flush()


def creat_isos_tri(root):
    print('Main_GUI_support.creat_isos_tri')
    sys.stdout.flush()


def creat_parallelogram(root):
    print('Main_GUI_support.creat_parallelogram')
    sys.stdout.flush()


def creat_rectangle(root):
    print('Main_GUI_support.creat_rectangle')
    sys.stdout.flush()


def creat_right_tri(root, canvas):
    Creat_Right_Tri.create_Creat_Right_Teiangle(root, canvas)
    with open(DATABASE, "r") as file:
        value = file.readline()
    print "3"
    print get_data(value)
    print "5"
    #obj = Right_Tri(value[1], value[3], value[5], value[7], value[9])
    #obj.draw_me(canvas)
    print('Main_GUI_support.creat_right_tri')
    sys.stdout.flush()

def creat_square(root):
    print('Main_GUI_support.creat_square')
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

def get_data(val):
    temp = val.split(";")
    return temp


if __name__ == '__main__':
    import Main_GUI
    Main_GUI.vp_start_gui()


