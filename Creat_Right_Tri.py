#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Nov 01, 2018 06:28:42 PM +0200  platform: Windows NT

import sys
from Right_Triangle import *

path_to_tool = sys.argv[0].split("/")
path_to_tool.pop()
temp = ""
for word in path_to_tool:
    temp += word + "/"
path_to_tool = temp[:-1]
path_to_tool += "/" + "data.txt"
DATABASE = path_to_tool

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Creat_Right_Tri_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = Creat_Right_Teiangle(root)
    Creat_Right_Tri_support.init(root, top)
    root.mainloop()

w = None
def create_Creat_Right_Teiangle(root, canvas, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel(root)
    top = Creat_Right_Teiangle(canvas, w)
    Creat_Right_Tri_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Creat_Right_Teiangle():
    global w
    w.destroy()
    w = None


class Creat_Right_Teiangle:
    def __init__(self, canvas, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font10 = "-family {Courier New} -size 10 -weight normal -slant"  \
            " roman -underline 0 -overstrike 0"
        font9 = "-family {Segoe UI} -size 9 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"

        top.geometry("318x250+559+180")
        top.title("Creat Right Teiangle")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.canv = canvas

        self.menubar = Menu(top,font=font9,bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)



        self.side_one = Entry(top)
        self.side_one.place(relx=0.283, rely=0.2,height=20, relwidth=0.201)
        self.side_one.configure(background="white")
        self.side_one.configure(disabledforeground="#a3a3a3")
        self.side_one.configure(font=font10)
        self.side_one.configure(foreground="#000000")
        self.side_one.configure(highlightbackground="#d9d9d9")
        self.side_one.configure(highlightcolor="black")
        self.side_one.configure(insertbackground="black")
        self.side_one.configure(selectbackground="#c4c4c4")
        self.side_one.configure(selectforeground="black")

        self.side_1 = Label(top)
        self.side_1.place(relx=0.031, rely=0.2, height=31, width=62)
        self.side_1.configure(activebackground="#f9f9f9")
        self.side_1.configure(activeforeground="black")
        self.side_1.configure(background="#d9d9d9")
        self.side_1.configure(disabledforeground="#a3a3a3")
        self.side_1.configure(foreground="#000000")
        self.side_1.configure(highlightbackground="#d9d9d9")
        self.side_1.configure(highlightcolor="black")
        self.side_1.configure(text='''Side One -''')
        self.side_1.configure(width=62)

        self.side_2 = Label(top)
        self.side_2.place(relx=0.031, rely=0.32, height=21, width=62)
        self.side_2.configure(activebackground="#f9f9f9")
        self.side_2.configure(activeforeground="black")
        self.side_2.configure(background="#d9d9d9")
        self.side_2.configure(disabledforeground="#a3a3a3")
        self.side_2.configure(foreground="#000000")
        self.side_2.configure(highlightbackground="#d9d9d9")
        self.side_2.configure(highlightcolor="black")
        self.side_2.configure(text='''Side Two -''')

        self.side_two = Entry(top)
        self.side_two.place(relx=0.283, rely=0.32,height=20, relwidth=0.201)
        self.side_two.configure(background="white")
        self.side_two.configure(disabledforeground="#a3a3a3")
        self.side_two.configure(font=font10)
        self.side_two.configure(foreground="#000000")
        self.side_two.configure(highlightbackground="#d9d9d9")
        self.side_two.configure(highlightcolor="black")
        self.side_two.configure(insertbackground="black")
        self.side_two.configure(selectbackground="#c4c4c4")
        self.side_two.configure(selectforeground="black")

        self.x_start = Entry(top)
        self.x_start.place(relx=0.283, rely=0.44,height=20, relwidth=0.201)
        self.x_start.configure(background="white")
        self.x_start.configure(disabledforeground="#a3a3a3")
        self.x_start.configure(font=font10)
        self.x_start.configure(foreground="#000000")
        self.x_start.configure(highlightbackground="#d9d9d9")
        self.x_start.configure(highlightcolor="black")
        self.x_start.configure(insertbackground="black")
        self.x_start.configure(selectbackground="#c4c4c4")
        self.x_start.configure(selectforeground="black")

        self.start_x = Label(top)
        self.start_x.place(relx=0.031, rely=0.44, height=21, width=77)
        self.start_x.configure(activebackground="#f9f9f9")
        self.start_x.configure(activeforeground="black")
        self.start_x.configure(background="#d9d9d9")
        self.start_x.configure(disabledforeground="#a3a3a3")
        self.start_x.configure(foreground="#000000")
        self.start_x.configure(highlightbackground="#d9d9d9")
        self.start_x.configure(highlightcolor="black")
        self.start_x.configure(text='''Start Point (x)''')

        self.Label4 = Label(top)
        self.Label4.place(relx=0.031, rely=0.04, height=41, width=134)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Creat Right Triangle''')

        self.Creat = Button(top)
        self.Creat.place(relx=0.503, rely=0.2, height=144, width=137)
        self.Creat.configure(activebackground="#d9d9d9")
        self.Creat.configure(activeforeground="#000000")
        self.Creat.configure(background="#d9d9d9")
        self.Creat.configure(disabledforeground="#a3a3a3")
        self.Creat.configure(foreground="#000000")
        self.Creat.configure(highlightbackground="#d9d9d9")
        self.Creat.configure(highlightcolor="black")
        self.Creat.configure(pady="0")
        self.Creat.configure(text='''Creat''')
        self.Creat.bind('<Button-1>',lambda e: self.button_pres())

        self.star_y = Label(top)
        self.star_y.place(relx=0.031, rely=0.56, height=21, width=74)
        self.star_y.configure(activebackground="#f9f9f9")
        self.star_y.configure(activeforeground="black")
        self.star_y.configure(background="#d9d9d9")
        self.star_y.configure(disabledforeground="#a3a3a3")
        self.star_y.configure(foreground="#000000")
        self.star_y.configure(highlightbackground="#d9d9d9")
        self.star_y.configure(highlightcolor="black")
        self.star_y.configure(text='''Start Point (y)''')

        self.y_start = Entry(top)
        self.y_start.place(relx=0.283, rely=0.56,height=20, relwidth=0.201)
        self.y_start.configure(background="white")
        self.y_start.configure(disabledforeground="#a3a3a3")
        self.y_start.configure(font=font10)
        self.y_start.configure(foreground="#000000")
        self.y_start.configure(highlightbackground="#d9d9d9")
        self.y_start.configure(highlightcolor="black")
        self.y_start.configure(insertbackground="black")
        self.y_start.configure(selectbackground="#c4c4c4")
        self.y_start.configure(selectforeground="black")

        self.Color = Entry(top)
        self.Color.place(relx=0.283, rely=0.68,height=20, relwidth=0.201)
        self.Color.configure(background="white")
        self.Color.configure(disabledforeground="#a3a3a3")
        self.Color.configure(font=font10)
        self.Color.configure(foreground="#000000")
        self.Color.configure(highlightbackground="#d9d9d9")
        self.Color.configure(highlightcolor="black")
        self.Color.configure(insertbackground="black")
        self.Color.configure(selectbackground="#c4c4c4")
        self.Color.configure(selectforeground="black")

        self.color = Label(top)
        self.color.place(relx=0.031, rely=0.68, height=21, width=61)
        self.color.configure(activebackground="#f9f9f9")
        self.color.configure(activeforeground="black")
        self.color.configure(background="#d9d9d9")
        self.color.configure(disabledforeground="#a3a3a3")
        self.color.configure(foreground="#000000")
        self.color.configure(highlightbackground="#d9d9d9")
        self.color.configure(highlightcolor="black")
        self.color.configure(text='''Color  ----''')

    def button_pres(self):
        x = self.x_start.get()
        y = self.y_start.get()
        side1 = self.side_one.get()
        side2 = self.side_two.get()
        color = self.Color.get()
        if side1 is not "" and side2 is not "" and x is not "" and y is not "" and color is not "":
            obj = Right_Tri(int(x), int(y), int(side1), int(side2), color)
            obj.draw_me(self.canv)
            value = "x_start" + ";" + x + ";" + "y_start" + ";" + y + ";" + "side1" + ";" + side1 + ";" + "side2" + ";" + side2 + ";" + "color" + ";" + color + "\n"
            with open(DATABASE, "a") as file:
                file.write(value)
            Creat_Right_Tri_support.destroy_window()


if __name__ == '__main__':
    vp_start_gui()



