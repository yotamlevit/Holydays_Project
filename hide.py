#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Nov 04, 2018 11:55:03 PM +0200  platform: Windows NT

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel (root)
    root.mainloop()

w = None
def create_New_Toplevel(root, canvas, shape, data, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel (canvas, shape, data, w)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
    def __init__(self, canvas, shape, data, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font14 = "-family {Segoe UI} -size 28 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"

        top.geometry("287x199+650+150")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")


        self.show = Button(top)
        self.show.place(relx=0.105, rely=0.151, height=124, width=227)
        self.show.configure(activebackground="#d9d9d9")
        self.show.configure(activeforeground="#000000")
        self.show.configure(background="#d9d9d9")
        self.show.configure(disabledforeground="#a3a3a3")
        self.show.configure(font=font14)
        self.show.configure(foreground="#000000")
        self.show.configure(highlightbackground="#d9d9d9")
        self.show.configure(highlightcolor="black")
        self.show.configure(pady="0")
        self.show.configure(text='''Show Shape''')
        self.show.configure(width=227)
        self.show.bind('<Button-1>',lambda e:self.show_shape(canvas, shape, data))

    def show_shape(self, canvas, shape, data):
        """
        returns the shape to the screen
        (draw it again)
        ;shape: the shapes canvas value(id)
            and the shape`s id in the database
        ;data: the database
        ;canvas: the canvas
        """
        obj = data.get_obj(shape)
        a = obj[0].draw_me(canvas)
        data.delete_value(shape)
        data.set_value(a, obj)
        destroy_New_Toplevel()






if __name__ == '__main__':
    vp_start_gui()



