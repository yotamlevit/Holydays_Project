#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Nov 04, 2018 06:41:03 PM +0200  platform: Windows NT

import sys
path_to_tool = sys.argv[0].split("/")
path_to_tool.pop()
temp = ""
for word in path_to_tool:
    temp += word + "/"
path_to_tool = temp[:-1]

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Shape_Func_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = Shape_Change (root)
    Shape_Func_support.init(root, top)
    root.mainloop()

w = None
def create_Shape_Change(root, data, canvas, shape, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = Shape_Change (data, canvas, shape, w)
    Shape_Func_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Shape_Change():
    global w
    w.destroy()
    w = None


class Shape_Change:
    def __init__(self, data, canvas, shape, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font10 = "-family {Courier New} -size 10 -weight normal -slant"  \
            " roman -underline 0 -overstrike 0"
        font11 = "-family {Segoe UI} -size 24 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font9 = "-family {Segoe UI} -size 9 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"

        top.geometry("574x360+526+143")
        top.title("Shape Change")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")


        self.delete_shape = Button(top)
        self.delete_shape.place(relx=0.296, rely=0.639, height=124, width=147)
        self.delete_shape.configure(activebackground="#d9d9d9")
        self.delete_shape.configure(activeforeground="#000000")
        self.delete_shape.configure(background="#d9d9d9")
        self.delete_shape.configure(disabledforeground="#a3a3a3")
        self.delete_shape.configure(foreground="#000000")
        self.delete_shape.configure(highlightbackground="#d9d9d9")
        self.delete_shape.configure(highlightcolor="black")
        self.delete_shape.configure(pady="0")
        self.delete_shape.configure(text='''Delete Shape''')
        self.delete_shape.bind('<Button-1>',lambda e:Shape_Func_support.delete_shape(canvas, shape, data))

        self.txt_color = Label(top)
        self.txt_color.place(relx=0.035, rely=0.028, height=21, width=90)
        self.txt_color.configure(activebackground="#f9f9f9")
        self.txt_color.configure(activeforeground="black")
        self.txt_color.configure(background="#d9d9d9")
        self.txt_color.configure(disabledforeground="#a3a3a3")
        self.txt_color.configure(foreground="#000000")
        self.txt_color.configure(highlightbackground="#d9d9d9")
        self.txt_color.configure(highlightcolor="black")
        self.txt_color.configure(text='''Change Color -''')

        self.new_color = Entry(top)
        self.new_color.place(relx=0.209, rely=0.028,height=20, relwidth=0.146)
        self.new_color.configure(background="white")
        self.new_color.configure(disabledforeground="#a3a3a3")
        self.new_color.configure(font=font10)
        self.new_color.configure(foreground="#000000")
        self.new_color.configure(highlightbackground="#d9d9d9")
        self.new_color.configure(highlightcolor="black")
        self.new_color.configure(insertbackground="black")
        self.new_color.configure(selectbackground="#c4c4c4")
        self.new_color.configure(selectforeground="black")
        self.new_color.bind('<Return>',lambda e:Shape_Func_support.change_color(canvas, shape, data, self.new_color.get()))

        self.txt_x = Label(top)
        self.txt_x.place(relx=0.035, rely=0.111, height=21, width=84)
        self.txt_x.configure(activebackground="#f9f9f9")
        self.txt_x.configure(activeforeground="black")
        self.txt_x.configure(background="#d9d9d9")
        self.txt_x.configure(disabledforeground="#a3a3a3")
        self.txt_x.configure(foreground="#000000")
        self.txt_x.configure(highlightbackground="#d9d9d9")
        self.txt_x.configure(highlightcolor="black")
        self.txt_x.configure(text='''New X -----''')

        self.new_x = Entry(top)
        self.new_x.place(relx=0.209, rely=0.111,height=20, relwidth=0.146)
        self.new_x.configure(background="white")
        self.new_x.configure(disabledforeground="#a3a3a3")
        self.new_x.configure(font=font10)
        self.new_x.configure(foreground="#000000")
        self.new_x.configure(highlightbackground="#d9d9d9")
        self.new_x.configure(highlightcolor="black")
        self.new_x.configure(insertbackground="black")
        self.new_x.configure(selectbackground="#c4c4c4")
        self.new_x.configure(selectforeground="black")
        self.new_x.bind('<Return>',lambda e:Shape_Func_support.move_x(canvas, shape, data, self.new_x.get()))

        self.txt_y = Label(top)
        self.txt_y.place(relx=0.035, rely=0.194, height=21, width=81)
        self.txt_y.configure(activebackground="#f9f9f9")
        self.txt_y.configure(activeforeground="black")
        self.txt_y.configure(background="#d9d9d9")
        self.txt_y.configure(disabledforeground="#a3a3a3")
        self.txt_y.configure(foreground="#000000")
        self.txt_y.configure(highlightbackground="#d9d9d9")
        self.txt_y.configure(highlightcolor="black")
        self.txt_y.configure(text='''New Y -----''')

        self.new_y = Entry(top)
        self.new_y.place(relx=0.209, rely=0.194,height=20, relwidth=0.146)
        self.new_y.configure(background="white")
        self.new_y.configure(disabledforeground="#a3a3a3")
        self.new_y.configure(font=font10)
        self.new_y.configure(foreground="#000000")
        self.new_y.configure(highlightbackground="#d9d9d9")
        self.new_y.configure(highlightcolor="black")
        self.new_y.configure(insertbackground="black")
        self.new_y.configure(selectbackground="#c4c4c4")
        self.new_y.configure(selectforeground="black")
        self.new_y.bind('<Return>',lambda e:Shape_Func_support.move_y(canvas, shape, data, self.new_y.get()))

        self.calc_area = Button(top)
        self.calc_area.place(relx=0.017, rely=0.639, height=44, width=147)
        self.calc_area.configure(activebackground="#d9d9d9")
        self.calc_area.configure(activeforeground="#000000")
        self.calc_area.configure(background="#d9d9d9")
        self.calc_area.configure(disabledforeground="#a3a3a3")
        self.calc_area.configure(foreground="#000000")
        self.calc_area.configure(highlightbackground="#d9d9d9")
        self.calc_area.configure(highlightcolor="black")
        self.calc_area.configure(pady="0")
        self.calc_area.configure(text='''Calculate Area''')
        self.calc_area.bind('<Button-1>',lambda e:Shape_Func_support.calc_shape(self.area_is, shape, data))

        self.area_frame = LabelFrame(top)
        self.area_frame.place(relx=0.017, rely=0.778, relheight=0.208
                , relwidth=0.261)
        self.area_frame.configure(relief=GROOVE)
        self.area_frame.configure(foreground="black")
        self.area_frame.configure(text='''Area is:''')
        self.area_frame.configure(background="#d9d9d9")
        self.area_frame.configure(highlightbackground="#d9d9d9")
        self.area_frame.configure(highlightcolor="black")
        self.area_frame.configure(width=150)

        self.area_is = Label(self.area_frame)
        self.area_is.place(relx=0.2, rely=0.267, height=41, width=84
                , bordermode='ignore')
        self.area_is.configure(activebackground="#f9f9f9")
        self.area_is.configure(activeforeground="black")
        self.area_is.configure(background="#d9d9d9")
        self.area_is.configure(disabledforeground="#a3a3a3")
        self.area_is.configure(foreground="#000000")
        self.area_is.configure(highlightbackground="#d9d9d9")
        self.area_is.configure(highlightcolor="black")
        self.area_is.configure(text='''_____''')

        self.txt_press2 = Label(top)
        self.txt_press2.place(relx=0.401, rely=0.083, height=41, width=112)
        self.txt_press2.configure(activebackground="#f9f9f9")
        self.txt_press2.configure(activeforeground="black")
        self.txt_press2.configure(background="#d9d9d9")
        self.txt_press2.configure(disabledforeground="#a3a3a3")
        self.txt_press2.configure(foreground="#000000")
        self.txt_press2.configure(highlightbackground="#d9d9d9")
        self.txt_press2.configure(highlightcolor="black")
        self.txt_press2.configure(text='''Press Enter To apply''')

        self.title_shape_var = Label(top)
        self.title_shape_var.place(relx=0.017, rely=0.25, height=51, width=268)
        self.title_shape_var.configure(activebackground="#f9f9f9")
        self.title_shape_var.configure(activeforeground="black")
        self.title_shape_var.configure(background="#d9d9d9")
        self.title_shape_var.configure(disabledforeground="#a3a3a3")
        self.title_shape_var.configure(font=font11)
        self.title_shape_var.configure(foreground="#000000")
        self.title_shape_var.configure(highlightbackground="#d9d9d9")
        self.title_shape_var.configure(highlightcolor="black")
        self.title_shape_var.configure(text='''Shape's Variables:''')

        self.txt_side1 = Label(top)
        self.txt_side1.place(relx=0.035, rely=0.389, height=21, width=34)
        self.txt_side1.configure(activebackground="#f9f9f9")
        self.txt_side1.configure(activeforeground="black")
        self.txt_side1.configure(background="#d9d9d9")
        self.txt_side1.configure(disabledforeground="#a3a3a3")
        self.txt_side1.configure(foreground="#000000")
        self.txt_side1.configure(highlightbackground="#d9d9d9")
        self.txt_side1.configure(highlightcolor="black")
        self.txt_side1.configure(text='''Side1''')

        self.txt_side2 = Label(top)
        self.txt_side2.place(relx=0.035, rely=0.472, height=21, width=34)
        self.txt_side2.configure(activebackground="#f9f9f9")
        self.txt_side2.configure(activeforeground="black")
        self.txt_side2.configure(background="#d9d9d9")
        self.txt_side2.configure(disabledforeground="#a3a3a3")
        self.txt_side2.configure(foreground="#000000")
        self.txt_side2.configure(highlightbackground="#d9d9d9")
        self.txt_side2.configure(highlightcolor="black")
        self.txt_side2.configure(text='''Side2''')

        self.txt_base = Label(top)
        self.txt_base.place(relx=0.035, rely=0.556, height=21, width=30)
        self.txt_base.configure(activebackground="#f9f9f9")
        self.txt_base.configure(activeforeground="black")
        self.txt_base.configure(background="#d9d9d9")
        self.txt_base.configure(disabledforeground="#a3a3a3")
        self.txt_base.configure(foreground="#000000")
        self.txt_base.configure(highlightbackground="#d9d9d9")
        self.txt_base.configure(highlightcolor="black")
        self.txt_base.configure(text='''Base''')

        self.txt_angle = Label(top)
        self.txt_angle.place(relx=0.279, rely=0.556, height=21, width=37)
        self.txt_angle.configure(activebackground="#f9f9f9")
        self.txt_angle.configure(activeforeground="black")
        self.txt_angle.configure(background="#d9d9d9")
        self.txt_angle.configure(disabledforeground="#a3a3a3")
        self.txt_angle.configure(foreground="#000000")
        self.txt_angle.configure(highlightbackground="#d9d9d9")
        self.txt_angle.configure(highlightcolor="black")
        self.txt_angle.configure(text='''Angle''')

        self.txt_rad = Label(top)
        self.txt_rad.place(relx=0.279, rely=0.389, height=21, width=41)
        self.txt_rad.configure(activebackground="#f9f9f9")
        self.txt_rad.configure(activeforeground="black")
        self.txt_rad.configure(background="#d9d9d9")
        self.txt_rad.configure(disabledforeground="#a3a3a3")
        self.txt_rad.configure(foreground="#000000")
        self.txt_rad.configure(highlightbackground="#d9d9d9")
        self.txt_rad.configure(highlightcolor="black")
        self.txt_rad.configure(text='''Radius''')

        self.side1 = Entry(top)
        self.side1.place(relx=0.105, rely=0.389,height=20, relwidth=0.146)
        self.side1.configure(background="white")
        self.side1.configure(disabledforeground="#a3a3a3")
        self.side1.configure(font=font10)
        self.side1.configure(foreground="#000000")
        self.side1.configure(highlightbackground="#d9d9d9")
        self.side1.configure(highlightcolor="black")
        self.side1.configure(insertbackground="black")
        self.side1.configure(selectbackground="#c4c4c4")
        self.side1.configure(selectforeground="black")
        self.side1.bind('<Return>',lambda e:Shape_Func_support.chenge_shape(canvas, shape, data, "side1", self.side1.get()))

        self.side2 = Entry(top)
        self.side2.place(relx=0.105, rely=0.472,height=20, relwidth=0.146)
        self.side2.configure(background="white")
        self.side2.configure(disabledforeground="#a3a3a3")
        self.side2.configure(font=font10)
        self.side2.configure(foreground="#000000")
        self.side2.configure(highlightbackground="#d9d9d9")
        self.side2.configure(highlightcolor="black")
        self.side2.configure(insertbackground="black")
        self.side2.configure(selectbackground="#c4c4c4")
        self.side2.configure(selectforeground="black")
        self.side2.bind('<Return>',lambda e:Shape_Func_support.chenge_shape(canvas, shape, data, "side2", self.side2.get()))

        self.base = Entry(top)
        self.base.place(relx=0.105, rely=0.556,height=20, relwidth=0.146)
        self.base.configure(background="white")
        self.base.configure(disabledforeground="#a3a3a3")
        self.base.configure(font=font10)
        self.base.configure(foreground="#000000")
        self.base.configure(highlightbackground="#d9d9d9")
        self.base.configure(highlightcolor="black")
        self.base.configure(insertbackground="black")
        self.base.configure(selectbackground="#c4c4c4")
        self.base.configure(selectforeground="black")
        self.base.bind('<Return>',lambda e:Shape_Func_support.chenge_shape(canvas, shape, data, "base", self.base.get()))

        self.txt_v_rad = Label(top)
        self.txt_v_rad.place(relx=0.279, rely=0.472, height=21, width=83)
        self.txt_v_rad.configure(activebackground="#f9f9f9")
        self.txt_v_rad.configure(activeforeground="black")
        self.txt_v_rad.configure(background="#d9d9d9")
        self.txt_v_rad.configure(disabledforeground="#a3a3a3")
        self.txt_v_rad.configure(foreground="#000000")
        self.txt_v_rad.configure(highlightbackground="#d9d9d9")
        self.txt_v_rad.configure(highlightcolor="black")
        self.txt_v_rad.configure(text='''Vertical Radius''')

        self.rad = Entry(top)
        self.rad.place(relx=0.366, rely=0.389,height=20, relwidth=0.146)
        self.rad.configure(background="white")
        self.rad.configure(disabledforeground="#a3a3a3")
        self.rad.configure(font=font10)
        self.rad.configure(foreground="#000000")
        self.rad.configure(highlightbackground="#d9d9d9")
        self.rad.configure(highlightcolor="black")
        self.rad.configure(insertbackground="black")
        self.rad.configure(selectbackground="#c4c4c4")
        self.rad.configure(selectforeground="black")
        self.rad.bind('<Return>',lambda e:Shape_Func_support.chenge_shape(canvas, shape, data, "rad", self.rad.get()))

        self.v_rad = Entry(top)
        self.v_rad.place(relx=0.436, rely=0.472,height=20, relwidth=0.146)
        self.v_rad.configure(background="white")
        self.v_rad.configure(disabledforeground="#a3a3a3")
        self.v_rad.configure(font=font10)
        self.v_rad.configure(foreground="#000000")
        self.v_rad.configure(highlightbackground="#d9d9d9")
        self.v_rad.configure(highlightcolor="black")
        self.v_rad.configure(insertbackground="black")
        self.v_rad.configure(selectbackground="#c4c4c4")
        self.v_rad.configure(selectforeground="black")
        self.v_rad.bind('<Return>',lambda e:Shape_Func_support.chenge_shape(canvas, shape, data, "v_rad", self.v_rad.get()))

        self.angle = Entry(top)
        self.angle.place(relx=0.366, rely=0.556,height=20, relwidth=0.146)
        self.angle.configure(background="white")
        self.angle.configure(disabledforeground="#a3a3a3")
        self.angle.configure(font=font10)
        self.angle.configure(foreground="#000000")
        self.angle.configure(highlightbackground="#d9d9d9")
        self.angle.configure(highlightcolor="black")
        self.angle.configure(insertbackground="black")
        self.angle.configure(selectbackground="#c4c4c4")
        self.angle.configure(selectforeground="black")
        self.angle.bind('<Return>',lambda e:Shape_Func_support.chenge_shape(canvas, shape, data, "angle", self.angle.get()))

        self.txt_Press1 = Label(top)
        self.txt_Press1.place(relx=0.47, rely=0.306, height=21, width=120)
        self.txt_Press1.configure(activebackground="#f9f9f9")
        self.txt_Press1.configure(activeforeground="black")
        self.txt_Press1.configure(background="#d9d9d9")
        self.txt_Press1.configure(disabledforeground="#a3a3a3")
        self.txt_Press1.configure(foreground="#000000")
        self.txt_Press1.configure(highlightbackground="#d9d9d9")
        self.txt_Press1.configure(highlightcolor="black")
        self.txt_Press1.configure(text='''(Press Enrer To apply)''')

        self.menubar = Menu(top,font=font9,bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)



        self.Label1 = Label(top)
        self.Label1.place(relx=0.679, rely=0.306, height=234, width=172)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self._img1 = PhotoImage(file=path_to_tool + "/Joke.gif")
        self.Label1.configure(image=self._img1)
        self.Label1.configure(text='''Label''')

        self.hide_shape = Button(top)
        self.hide_shape.place(relx=0.801, rely=0.028, height=84, width=97)
        self.hide_shape.configure(activebackground="#d9d9d9")
        self.hide_shape.configure(activeforeground="#000000")
        self.hide_shape.configure(background="#d9d9d9")
        self.hide_shape.configure(disabledforeground="#a3a3a3")
        self.hide_shape.configure(foreground="#000000")
        self.hide_shape.configure(highlightbackground="#d9d9d9")
        self.hide_shape.configure(highlightcolor="black")
        self.hide_shape.configure(pady="0")
        self.hide_shape.configure(text='''Hide Shape''')
        self.hide_shape.configure(width=97)
        self.hide_shape.bind('<Button-1>',lambda e:Shape_Func_support.hide_shape(top, canvas, shape, data))

        self.move_shape = Button(top)
        self.move_shape.place(relx=0.575, rely=0.028, height=84, width=117)
        self.move_shape.configure(activebackground="#d9d9d9")
        self.move_shape.configure(activeforeground="#000000")
        self.move_shape.configure(background="#d9d9d9")
        self.move_shape.configure(disabledforeground="#a3a3a3")
        self.move_shape.configure(foreground="#000000")
        self.move_shape.configure(highlightbackground="#d9d9d9")
        self.move_shape.configure(highlightcolor="black")
        self.move_shape.configure(pady="0")
        self.move_shape.configure(text='''Start/Stop Move''')
        self.move_shape.configure(width=117)
        self.move_shape.bind('<Button-1>',lambda e:Shape_Func_support.move_shape(canvas, shape, data))







if __name__ == '__main__':
    vp_start_gui()



